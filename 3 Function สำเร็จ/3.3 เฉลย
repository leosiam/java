แบบฝึกหัด
แบบฝึกหัดที่ 1: การสร้างวันที่
คำสั่ง: ให้เขียนฟังก์ชันที่รับปี เดือน และวัน จากผู้ใช้ และคืนค่าวัตถุ LocalDate ที่สร้างจากข้อมูลที่ได้รับ

======================================================================
import java.time.LocalDate;

public class Main {
    public static LocalDate createDate(int year, int month, int day) {
        return LocalDate.of(year, month, day);
    }

    public static void main(String[] args) {
        LocalDate date = createDate(2024, 6, 30);
        System.out.println("Created Date: " + date);  // Output: Created Date: 2024-06-30
    }
}
======================================================================
แบบฝึกหัดที่ 2: การจัดรูปแบบวันที่
คำสั่ง: ให้เขียนฟังก์ชันที่รับวัตถุ LocalDate และคืนค่าสตริงที่จัดรูปแบบเป็น "dd/MM/yyyy"

======================================================================
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

public class Main {
    public static String formatDate(LocalDate date) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        return date.format(formatter);
    }

    public static void main(String[] args) {
        LocalDate date = LocalDate.of(2024, 6, 30);
        String formattedDate = formatDate(date);
        System.out.println("Formatted Date: " + formattedDate);  // Output: Formatted Date: 30/06/2024
    }
}

======================================================================
แบบฝึกหัดที่ 3: การคำนวณวันที่เพิ่มขึ้น
คำสั่ง: ให้เขียนฟังก์ชันที่รับวัตถุ LocalDate และจำนวนวันที่ต้องการเพิ่ม และคืนค่าวัตถุ LocalDate ที่เพิ่มวันที่แล้ว

======================================================================
import java.time.LocalDate;

public class Main {
    public static LocalDate addDays(LocalDate date, int days) {
        return date.plusDays(days);
    }

    public static void main(String[] args) {
        LocalDate date = LocalDate.of(2024, 6, 30);
        LocalDate newDate = addDays(date, 10);
        System.out.println("New Date: " + newDate);  // Output: New Date: 2024-07-10
    }
}

======================================================================
แบบฝึกหัดที่ 4: การคำนวณความแตกต่างระหว่างสองวันที่
คำสั่ง: ให้เขียนฟังก์ชันที่รับวัตถุ LocalDate สองตัว และคืนค่าจำนวนวันที่ต่างกันระหว่างสองวันนั้น

======================================================================
import java.time.LocalDate;
import java.time.Period;

public class Main {
    public static int daysBetween(LocalDate date1, LocalDate date2) {
        Period period = Period.between(date1, date2);
        return period.getDays();
    }

    public static void main(String[] args) {
        LocalDate date1 = LocalDate.of(2024, 6, 30);
        LocalDate date2 = LocalDate.of(2024, 7, 10);
        int daysDifference = daysBetween(date1, date2);
        System.out.println("Days Difference: " + daysDifference);  // Output: Days Difference: 10
    }
}

======================================================================
แบบฝึกหัดที่ 5: การแปลงสตริงเป็นวันที่
คำสั่ง: ให้เขียนฟังก์ชันที่รับสตริงในรูปแบบ "dd/MM/yyyy" และคืนค่าวัตถุ LocalDate

======================================================================
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

public class Main {
    public static LocalDate parseDate(String dateString) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        return LocalDate.parse(dateString, formatter);
    }

    public static void main(String[] args) {
        String dateString = "30/06/2024";
        LocalDate date = parseDate(dateString);
        System.out.println("Parsed Date: " + date);  // Output: Parsed Date: 2024-06-30
    }
}
